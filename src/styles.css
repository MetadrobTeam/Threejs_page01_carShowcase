@font-face {
  font-family: 'Aften Screen';
  font-weight: 400;
  font-variant: normal;
}

* {
  box-sizing: border-box;
}

html {
  background: #000;
  color: #f2f2f2;
  font-family: 'Aften Screen', system, -apple-system, \.SFNSText-Regular, San Francisco, Roboto, Segoe UI, Helvetica Neue, Lucida Grande,
    sans-serif;
}

a {
  color: #f2f2f2;
}

html,
body,
#root {
  width: 100%;
  min-height: 100%;
  margin: 0;
  padding: 0;
}

article {
  padding: 3vw 5vw 0;
}

header {
  display: flex;
  align-items: center;
  justify-content: space-between;
}
header svg {
  fill: white;
  height: 20px;
}

section {
  margin: 10vw 0 10vw;
}
h1 {
  font-size: 4vw;
  font-weight: 800;
  letter-spacing: 8px;
  text-align: center;
}
p,
section.text {
  max-width: 400px;
  font-size: 16px;
}

.StickyContainer {
  height: 56vh;
}
.StickyContainer2 {
  height: 80vh;
}
.SomeDomContent {
  position: sticky;
  top: 15vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 70vh;
  padding: 2rem;
}

/* Debug styles */

.stack {
  display: grid;
  grid-template-columns: 1fr;
}
.stack h1 {
  font-size: 4vw;
  font-weight: 800;
  letter-spacing: 8px;
  text-align: center;
  grid-row-start: 1;
  grid-column-start: 1;
  --stack-height: calc(100% / var(--stacks) - 1px);
  --inverse-index: calc(calc(var(--stacks) - 1) - var(--index));
  --clip-top: calc(var(--stack-height) * var(--index));
  --clip-bottom: calc(var(--stack-height) * var(--inverse-index));
  clip-path: inset(var(--clip-top) 0 var(--clip-bottom) 0);
  animation: stack 170ms cubic-bezier(.46,.29,0,1.24) 1 backwards calc(var(--index) * 10ms), glitch 1s ease infinite 1s alternate-reverse;
}

@keyframes stack {
  0% {
    opacity: 0;
    transform: translateX(-50%);
    text-shadow: -2px 3px 0 red, 2px -3px 0 blue;
  }
  40% {
    opacity: 0.5;
    transform: translateX(50%);
  }
  60% {
    transform: none;
    opacity: 1;
    text-shadow: 2px -3px 0 red, -2px 3px 0 blue;
  }
  100% {
    text-shadow: none;
  }
}

@keyframes glitch {
  0% {
    text-shadow: -2px 3px 0 red, 2px -3px 0 blue;
    transform: translate(var(--glitch-translate));
  }
  1% {
    text-shadow: 2px -3px 0 red, -2px 3px 0 blue;
  }
  2%, 100% {
    text-shadow: none;
    transform: none;
  }
}

.ViewportScrollScene:after {
  content: 'ViewportScrollScene';
}
